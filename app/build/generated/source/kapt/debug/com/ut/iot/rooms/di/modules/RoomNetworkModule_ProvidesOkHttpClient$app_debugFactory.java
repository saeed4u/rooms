// Generated by Dagger (https://dagger.dev).
package com.ut.iot.rooms.di.modules;

import com.ut.iot.rooms.state.StateManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

public final class RoomNetworkModule_ProvidesOkHttpClient$app_debugFactory implements Factory<OkHttpClient> {
  private final RoomNetworkModule module;

  private final Provider<StateManager> stateManagerProvider;

  public RoomNetworkModule_ProvidesOkHttpClient$app_debugFactory(RoomNetworkModule module,
      Provider<StateManager> stateManagerProvider) {
    this.module = module;
    this.stateManagerProvider = stateManagerProvider;
  }

  @Override
  public OkHttpClient get() {
    return providesOkHttpClient$app_debug(module, stateManagerProvider.get());
  }

  public static RoomNetworkModule_ProvidesOkHttpClient$app_debugFactory create(
      RoomNetworkModule module, Provider<StateManager> stateManagerProvider) {
    return new RoomNetworkModule_ProvidesOkHttpClient$app_debugFactory(module, stateManagerProvider);
  }

  public static OkHttpClient providesOkHttpClient$app_debug(RoomNetworkModule instance,
      StateManager stateManager) {
    return Preconditions.checkNotNull(instance.providesOkHttpClient$app_debug(stateManager), "Cannot return null from a non-@Nullable @Provides method");
  }
}
